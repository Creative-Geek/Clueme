name: Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create temporary .env file
      run: |
        echo "SOLVING_MODEL_API_KEY=placeholder" > .env
        echo "SOLVING_MODEL_BASE_URL=https://api.example.com" >> .env
        echo "SOLVING_MODEL=gpt-4" >> .env
        echo "OCR_API_KEY=placeholder" >> .env
        echo "OCR_BASE_URL=https://api.example.com" >> .env
        echo "OCR_MODEL=gpt-4-vision-preview" >> .env
        echo "CAPTURE_HOTKEY=Alt+Enter" >> .env
        echo "QUIT_HOTKEY=Ctrl+Alt+Q" >> .env
        echo "RESET_HOTKEY=Ctrl+Alt+R" >> .env
        
    - name: Build executable
      run: |
        pyinstaller --onefile --noconsole --icon=clueme.ico --name=clueme --add-data ".env;." --exclude-module PyQt5 --exclude-module PyQt6 clueme.py
        
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/github-script@v7
      with:
        script: |
          const tag = `v${{ steps.date.outputs.date }}`;
          const releaseNotes = `Release ${tag}\n\nAuto-generated release for commit ${{ github.sha }}`;
          
          // Create the release
          const response = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: tag,
            name: tag,
            body: releaseNotes,
            draft: false,
            prerelease: false
          });
          
          // Upload the asset
          const asset = await github.rest.repos.uploadReleaseAsset({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: response.data.id,
            name: 'clueme.exe',
            data: fs.readFileSync('dist/clueme.exe')
          });
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 